openapi: 3.0.3
info:
  title: 選課清單
  version: 1.0.0
servers:
- url: https://irisyen115.synology.me/course-api
paths:
  /courses:
    get:
      summary: List Courses
      operationId: list_courses_courses_get
      parameters:
      - name: page
        in: query
        required: false
        schema:
          title: Page
          minimum: 1
          type: integer
          default: 1
      - name: per_page
        in: query
        required: false
        schema:
          title: Per Page
          maximum: 100
          minimum: 1
          type: integer
          default: 2
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Courses Courses Get
                type: object
                additionalProperties: true
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /instructors:
    get:
      summary: List Instructors
      operationId: list_instructors_instructors_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Instructors Instructors Get
                type: array
                items:
                  $ref: "#/components/schemas/InstructorSchema"
  /instructor/{instructorId}/courses:
    get:
      summary: List Instructor Courses
      operationId: list_instructor_courses_instructor__instructorId__courses_get
      parameters:
      - name: instructorId
        in: path
        required: true
        schema:
          title: Instructorid
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Instructor Courses Instructor  Instructorid  Courses Get
                type: array
                items:
                  $ref: "#/components/schemas/CourseSchema"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /course:
    post:
      summary: Create Course
      operationId: create_course_course_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseInput"
        required: true
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseSchema"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /instructor:
    post:
      summary: Create Instructor
      operationId: create_instructor_instructor_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstructorInput"
        required: true
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstructorSchema"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /course/{courseId}:
    put:
      summary: Update Course
      operationId: update_course_course__courseId__put
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          title: Courseid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseInput"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseSchema"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    delete:
      summary: Delete Course
      operationId: delete_course_course__courseId__delete
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          title: Courseid
          type: string
      responses:
        "204":
          description: Successful Response
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    CourseInput:
      title: CourseInput
      required:
      - description
      - endTime
      - instructorId
      - startTime
      - title
      type: object
      properties:
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        instructorId:
          title: Instructorid
          type: string
        startTime:
          title: Starttime
          type: integer
        endTime:
          title: Endtime
          type: integer
    CourseSchema:
      title: CourseSchema
      required:
      - description
      - endTime
      - id
      - instructorId
      - startTime
      - title
      type: object
      properties:
        id:
          title: Id
          type: string
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        instructorId:
          title: Instructorid
          type: string
        startTime:
          title: Starttime
          type: integer
        endTime:
          title: Endtime
          type: integer
        is_deleted:
          title: Is Deleted
          anyOf:
          - type: boolean
          - nullable: true
          default: false
        deleted_at:
          title: Deleted At
          anyOf:
          - type: string
            format: date-time
          - nullable: true
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
    InstructorInput:
      title: InstructorInput
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
    InstructorSchema:
      title: InstructorSchema
      required:
      - email
      - id
      - name
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          anyOf:
          - type: string
          - nullable: true
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
